#! /usr/bin/env sh

TMUP_HOME=$HOME/.tmup
BACKUP_EDITOR_CONFIG_HOME=$HOME/.tmup/envs/default
CURRENT_VIMRC=$HOME/.vimrc
CURRENT_VIM_DIR=$HOME/.vim
CURRENT_EMACS_INIT=$HOME/.emacs
CURRENT_EMACS_D=$HOME/.emacs.d

usage(){
    echo "Usage:"
    echo "tmup load ENV_NAME"
    echo "tmup backup "
    echo "        # copy vim and emacs config files to $BACKUP_EDITOR_CONFIG_HOME"
    echo "tmup create joe git@github.com:joedursun/.emacs.d.git"
    echo "        # clone the given repo into $HOME/.tmup/envs/joe/"
    echo "tmup update [ENV_NAME]"
    echo "        # update tmup tool; if ENV_NAME is provided, then update that env only"
}

backup_default_env(){

    if [ ! -d $BACKUP_EDITOR_CONFIG_HOME ]; then
        mkdir -p $BACKUP_EDITOR_CONFIG_HOME
    fi

    files=("$CURRENT_VIMRC" "$CURRENT_EMACS_INIT")
    directories=("$CURRENT_VIM_DIR" "$CURRENT_EMACS_D")

    for file_name in "${files[@]}"
    do
        if [ -f $file_name ]; then
            echo "backing up $file_name"
            cp -f $file_name $BACKUP_EDITOR_CONFIG_HOME
        fi
    done

    for dir in "${directories[@]}"
    do
        if [ -d $dir ]; then
            echo "backing up $dir"
            cp -rf $dir $BACKUP_EDITOR_CONFIG_HOME
        fi
    done

}

load_vim_env(){
    # $1 - name of directory containing environment to load
    vimrc="$TMUP_HOME/envs/$1/.vimrc"
    vim_dir="$TMUP_HOME/envs/$1/.vim"

    if [ -d $vim_dir ]; then
        echo "symlinking $vim_dir to $HOME/.vim"
        rm -rf $HOME/.vim
        ln -s $vim_dir $HOME/.vim
    fi

    if [ -f $vimrc ]; then
        echo "symlinking $vimrc to $HOME/.vimrc"
        ln -s -f $vimrc $HOME/.vimrc
    fi
}

load_emacs_env(){
    # $1 - name of directory containing environment to load
    emacs_init="$TMUP_HOME/envs/$1/.emacs"
    emacs_d="$TMUP_HOME/envs/$1/.emacs.d"

    if [ -d $emacs_d ]; then
        echo "symlinking $emacs_d to $HOME/.emacs.d"
        rm -rf $HOME/.emacs.d
        ln -s -f $emacs_d $HOME/.emacs.d
    fi

    if [ -f $emacs_init ]; then
        echo echo "symlinking $emacs_init to $HOME/.emacs"
        ln -s -f $emacs_init $HOME/.emacs
    fi
}

load(){
    if [ $# -lt 1 ]; then
        usage
        exit 1
    fi

    if [ ! -d $BACKUP_EDITOR_CONFIG_HOME ]; then
        backup_default_env
    fi

    env_to_load=$1
    partner_dir="$TMUP_HOME/envs/$env_to_load"

    if [ -d $partner_dir ]; then
        load_vim_env $env_to_load
        load_emacs_env $env_to_load
    fi
}

reset(){
    load_vim_env "default"
    load_emacs_env "default"
}

create(){
    # clone repo in the proper env dir
    env_name=$2
    repo_location=$3

    name_regexp=".+\/([^\/]+).git"
    [[ $repo_location =~ $name_regexp ]]
    repo_name=${BASH_REMATCH[1]}

    destination=$TMUP_HOME/envs/$env_name/$repo_name
    echo "cloning repo $repo_location into $destination"
    git clone $repo_location $destination
}

implode(){
    rm -rf .tmup
    exit
}

update(){
    repo_to_update=$HOME/.tmup
    env_name=$1
    if [ $1 ]; then
        repo_to_update=$(find $HOME/.tmup/envs/$env_name -name .git | sed 's/\.git$//')
    fi
    echo "Updating $repo_to_update"
    cd $repo_to_update && git pull --rebase origin master
}

case $1 in
    load)
        load $2
        ;;
    reset)
        reset
    ;;
    backup)
        backup_default_env
    ;;
    create)
        create $@
    ;;
    update)
        update $2
    ;;
    implode)
        implode
    ;;
    *)
        usage
    ;;
esac
